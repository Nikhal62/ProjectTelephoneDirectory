@model Presentation_Layer.ViewModel.TelephoneDirectoryRecordViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<link href="~/Content/buttonstyle.css" rel="stylesheet" type="text/css"/>
<script src="~/Scripts/pagination.js"></script>
<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "buttonstyle" })
</p>
<br/>
@{ 
    bool mobval, landval;
    if (ViewData["phonetype"].ToString() == "Mobile")
    {
        mobval = true;
        landval = false;
    }
    else if (ViewData["phonetype"].ToString() == "Landline")
    {
        mobval = false;
        landval = true;
    }
    else
    {
        mobval = false;
        landval = false;
    }
}
@using (Html.BeginForm("Index", "TelephoneDirectory", FormMethod.Get))
{   
    <div class="container">
        <div class="form-inline">
            <div class="form-group">
                @Html.Label("First Name", new { @class = "control-label col-lg-5" })
                <div class="col-lg-5">
                    @Html.TextBox("firstNameSearch", ViewData["firstname"], new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Last Name", new { @class = "control-label col-lg-5" })
                <div class="col-lg-5">
                    @Html.TextBox("lastNameSearch", ViewData["lastname"], new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Address", new { @class = "control-label col-lg-5" })
                <div class="col-lg-5">
                    @Html.TextBox("addressSearch", ViewData["address"], new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone Type", new { @class = "control-label col-lg-5" })
                <div class="col-lg-5">
                    @Html.DropDownList("phoneTypeSearch", new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Select one", Value = "Select one" },
                        new SelectListItem { Text = "Mobile", Value = "Mobile",Selected=@mobval },
                        new SelectListItem { Text = "Landline", Value = "Landline",Selected=@landval }
                    }, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone Number", new { @class = "control-label col-lg-5" })
                <div class="col-lg-5">
                    @Html.TextBox("phoneNumberSearch", ViewData["phonenumber"], new { @class = "form-control" })
                </div>
            </div>
            <br/>
            <br />
            <div class="form-group">
                <div class="col-lg-5">
                   <input type="submit" name="submit" value="Search" class="btn btn-warning form-control" />
                </div>
            </div>
        </div> 
</div>
}
<br />
<div>
    @using (Html.BeginForm("Index", "TelephoneDirectory", FormMethod.Post))
    {
        <table class="table table-bordered table-hover table-responsive">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayName("First Name")
                    </th>
                    <th>
                        @Html.DisplayName("Last Name")
                    </th>
                    <th>
                        @Html.DisplayName("Address")
                    </th>
                    <th>
                        @Html.DisplayName("Phone Type")
                    </th>
                    <th>
                        @Html.DisplayName("Phone Number")
                    </th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.Records)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { phoneNumber = item.PhoneNumber }, new { @class = "buttonstyle" }) |
                            @Html.ActionLink("Details", "Details", new { phoneNumber = item.PhoneNumber }, new { @class = "buttonstyle" }) |
                            @Html.ActionLink("Delete", "Delete", new { phoneNumber = item.PhoneNumber }, new { @class = "buttonstyle" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br/>

        <b>Go to Page Number</b>
        <br/>
        
        <table cellpadding="0" cellspacing="0">
            <tr>
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <td>
                        @if (i != Model.CurrentPageIndex)
                        {
                            <a class="btn btn-default" href="javascript:PagerClick(@i);">@i</a>
                        }
                        else
                        {
                            @i
                        }
                    </td>
                }
            </tr>
        </table>
        <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
    }
</div>
